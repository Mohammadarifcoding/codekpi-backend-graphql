// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(uuid())
  name                String
  email               String     @unique
  createdAt           DateTime   @default(now())
  password            String
  profile             Profile?
  interestedWorkshops Workshop[] @relation("workshop_interested_users")
  workshopId          String?
}

model Profile {
  id          String      @id @default(uuid())
  avatarId    String?     @unique
  avatar      Picture?    @relation("ProfileAvatar", fields: [avatarId], references: [id])
  bio         String?
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id])
  session     Session?
  shift       Shift?
  gender      Gender?
  department  Department?
  phone       String?
  roll        String?
  polytechnic String?
  pictureId   String?
}

model Workshop {
  id              String   @id @default(uuid())
  title           String
  bannerId        String?  @unique
  banner          Picture? @relation("WorkshopBanner", fields: [bannerId], references: [id])
  content         String
  createdAt       DateTime @default(now())
  interestedUsers User[]   @relation("workshop_interested_users")
}

model Review {
  id          String     @id @default(ulid())
  userImageId String?    @unique
  userImage   Picture?   @relation("UserImage", fields: [userImageId], references: [id])
  name        String
  text        String
  rating      Int
  status      Status     @default(PENDING)
  department  Department
  session     Session
  shift       Shift
  createdAt   DateTime   @default(now())
}

model Picture {
  id       String    @id @default(ulid())
  image    String
  review   Review?   @relation("UserImage")
  Profile  Profile?  @relation("ProfileAvatar")
  Workshop Workshop? @relation("WorkshopBanner")
}

enum Session {
  SESSION_18_19 @map("18-19")
  SESSION_19_20 @map("19-20")
  SESSION_20_21 @map("20-21")
  SESSION_21_22 @map("21-22")
  SESSION_22_23 @map("22-23")
  SESSION_23_24 @map("23-24")
  SESSION_24_25 @map("24-25")
}

enum Department {
  COMPUTER    @map("Computer Technology")
  CIVIL       @map("Civil Technology")
  ELECTRICAL  @map("Electrical Technology")
  MECHANICAL  @map("Mechanical Technology")
  ELECTRONICS @map("Electronics Technology")
  POWER       @map("Power Technology")
  AUTOMOBILE  @map("Automobile Technology")
  RAC         @map("RAC Technology")
  OTHER       @map("Other Technology")
}

enum Gender {
  MALE   @map("male")
  FEMALE @map("female")
  OTHER  @map("other")
}

enum Shift {
  MORNING @map("morning")
  EVENING @map("evening")
}

enum Status {
  PENDING  @map("pending")
  APPROVED @map("approved")
}
